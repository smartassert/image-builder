name: Store build config

on:
  repository_dispatch:
    types: [worker-manager-release]
  workflow_dispatch:
    inputs:
      worker-manager-version:
        description: Worker manager version
        required: true

jobs:
  build:
    name: Store build config
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Checkout bash-ga-ci-tools
        uses: actions/checkout@v2
        with:
          repository: smartassert/bash-ga-ci-tools
          path: ./vendor/smartassert/bash-ga-ci-tools
          ref: main

      - name: Set worker manager version
        id: worker-manager-version
        env:
          VALUE1: ${{ github.event.client_payload.worker_manager_version }}
          VALUE2: ${{ github.event.inputs.worker-manager-version }}
        run: echo "::set-output name=value::$(./vendor/smartassert/bash-ga-ci-tools/src/select-exclusive-value-from-two-values.sh)"

      - name: Update build.env
        id: update
        env:
          WORKER_MANAGER_VERSION: ${{ steps.worker-manager-version.outputs.value }}
        run: echo "WORKER_MANAGER_VERSION=$WORKER_MANAGER_VERSION" > build.env

      - name: Remove non-committable dependencies
        run: rm -Rf ./vendor

      - name: Commit changes
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Automatic build.env for worker manager release ${{ steps.worker-manager-version.outputs.value }}"

      - name: Get latest commit hash
        id: commit_hash
        if: ${{ steps.auto-commit-action.outputs.changes_detected == 'true' }}
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          echo "::set-output name=value::$COMMIT_HASH"

      - name: Create release notes
        if: ${{ steps.auto-commit-action.outputs.changes_detected == 'true' }}
        id: release_notes
        run: |
          rm -f release-notes.md
          export echo $(cat build.env | tr '\n' ' ')
          echo "- worker manager: $WORKER_MANAGER_VERSION" >> release-notes.md

      - name: Create release
        if: ${{ steps.auto-commit-action.outputs.changes_detected == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN_SELF }}
          TAG: ${{ github.event.client_payload.worker_manager_version }}
          TARGET: ${{ steps.commit_hash.outputs.value }}
          TITLE: "Automatic release ${{ github.event.client_payload.worker_manager_version }}"
          NOTES: ${{ steps.release_notes.outputs.value }}
        run: |
          gh release create $TAG --target $TARGET --title "$TITLE" --notes-file ./release-notes.md
