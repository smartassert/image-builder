name: Store build config

on:
  repository_dispatch:
    types: [worker-manager-release]
  workflow_dispatch:
    inputs:
      worker-manager-version:
        description: Worker manager version
        required: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      worker-manager-version: ${{ steps.worker-manager-version.outputs.value }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout bash-ga-ci-tools
        uses: actions/checkout@v2
        with:
          repository: smartassert/bash-ga-ci-tools
          path: ./vendor/smartassert/bash-ga-ci-tools
          ref: main

      - name: Set worker manager version
        id: worker-manager-version
        env:
          VALUE1: ${{ github.event.client_payload.worker_manager_version }}
          VALUE2: ${{ github.event.inputs.worker-manager-version }}
        run: echo "::set-output name=value::$(./vendor/smartassert/bash-ga-ci-tools/src/select-exclusive-value-from-two-values.sh)"

  verify-setup:
    name: Verify setup
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout bash-ga-ci-tools
        uses: actions/checkout@v2
        with:
          repository: smartassert/bash-ga-ci-tools
          path: ./vendor/smartassert/bash-ga-ci-tools
          ref: main

      - name: Output
        env:
          OUTPUTS: ${{ toJson(needs.setup.outputs) }}
        run: |
          echo "$OUTPUTS"
          ./vendor/smartassert/bash-ga-ci-tools/src/json-contains-no-empty-values.sh

  update-build-configuration:
    name: Update build configuration
    runs-on: ubuntu-latest
    needs: [setup, verify-setup]
    outputs:
      create-release: ${{ steps.auto-commit-action.outputs.changes_detected }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Update
        id: update
        env:
          WORKER_MANAGER_VERSION: ${{ needs.setup.outputs.worker-manager-version }}
        run: echo "WORKER_MANAGER_VERSION=$WORKER_MANAGER_VERSION" > build.env

      - name: Commit
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Automatic build.env for worker manager release ${{ needs.setup.outputs.worker-manager-version }}"

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [setup, update-build-configuration]
    if: ${{ needs.update-build-configuration.outputs.create-release == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Get latest commit hash
        id: commit_hash
        run: echo "::set-output name=value::$(git rev-parse HEAD)"

      - name: Create release notes
        id: release_notes
        env:
          WORKER_MANAGER_VERSION: ${{ needs.setup.outputs.worker-manager-version }}
        run: |
          echo "- worker manager: $WORKER_MANAGER_VERSION" > release-notes.md

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN_SELF }}
          TAG: ${{ needs.setup.outputs.worker-manager-version }}
          TARGET: ${{ steps.commit_hash.outputs.value }}
          TITLE: "Automatic release ${{ needs.setup.outputs.worker-manager-version }}"
          NOTES: ${{ steps.release_notes.outputs.value }}
        run: |
          gh release create "$TAG" --target "$TARGET" --title "$TITLE" --notes-file ./release-notes.md
