name: Tests - Rerun

on:
  workflow_run:
    workflows:
      - Tests
    types:
      - completed

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    outputs:
      should-retry: ${{ steps.should-retry.outputs.value }}
      run-id: ${{ github.event.workflow_run.id }}
      comment: ${{ steps.comment.outputs.value }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dump context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Set maximum duration
        id: maximum-duration
        run: echo "::set-output name=value::300"

      - name: Set duration
        id: duration
        env:
          CREATED_AT: ${{ github.event.workflow_run.created_at }}
          UPDATED_AT: ${{ github.event.workflow_run.updated_at }}
        run: |
          DURATION=$(./ci/scripts/tests-rerun-calculate-duration.sh)
          echo "::set-output name=value::$DURATION"

      - name: Set 'should retry'?
        id: should-retry
        env:
          MAXIMUM_DURATION: ${{ steps.maximum-duration.outputs.value }}
          DURATION: ${{ steps.duration.outputs.value }}
        run: |
          SHOULD_RETRY=$(./ci/scripts/tests-rerun-should-retry.sh)
          echo "::set-output name=value::$SHOULD_RETRY"

      - name: Set comment
        id: comment
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN_SELF }}
          MAXIMUM_DURATION: ${{ steps.maximum-duration.outputs.value }}
          DURATION: ${{ steps.duration.outputs.value }}
          WORKFLOW: ${{ github.event.workflow.name }}
        run: |
          COMMENT="Retrying \"$WORKFLOW\". Duration: $DURATION. Maximum duration: $MAXIMUM_DURATION"
          echo "::set-output name=value::$COMMENT"

  verify-setup:
    name: Verify setup
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout bash-ga-ci-tools
        uses: actions/checkout@v2
        with:
          repository: smartassert/bash-ga-ci-tools
          path: ./vendor/smartassert/bash-ga-ci-tools
          ref: main

      - name: Output
        env:
          OUTPUTS: ${{ toJson(needs.setup.outputs) }}
        run: |
          echo "$OUTPUTS"
          ./vendor/smartassert/bash-ga-ci-tools/src/json-contains-no-empty-values.sh

  retry:
    name: Retry and comment
    runs-on: ubuntu-latest
    needs: [setup, verify-setup]
    if: ${{ github.event.workflow_run.conclusion == 'failure' && needs.setup.outputs.should-retry == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Retry
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN_SELF }}
          RUN_ID: ${{ needs.setup.outputs.run-id }}
          REPO: ${{ github.repository }}
        run: gh run rerun "$RUN_ID" --repo "$REPO"

      - name: Comment
        env:
          PULL_REQUESTS: ${{ toJson(github.event.workflow_run.pull_requests) }}
          COMMENT: ${{ needs.setup.outputs.comment }}
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN_SELF }}
          REPO: ${{ github.repository }}
        run: ./ci/scripts/tests-rerun-comment-on-pull-requests.sh
